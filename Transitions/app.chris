background: black
color: white
margin: 0
padding: 64px
overflow: hidden

font-family: 'Montserrat'
font-size: 16px

text-align: center

user-select: none

meta
    http-equiv "Content-Type"
    charset "utf-8"
    content "text/html; charset=utf-8"

meta
    name "viewport"
    content "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable = no"

link
    href "https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700,800,900,900i&amp;subset=cyrillic"
    rel "stylesheet"

class hidden
    display: none!important

class button
    position: relative
    display: inline-block
    color: black
    vertical-align: top
    
    border-radius: 8px
    padding: 16px 32px
    margin: 4px
    
    cursor: pointer
    
    transition: all .3s cubic-bezier(0.42, 0, 0.32, 1), margin 0s

class button-red
    background: #F5422F

class button-yellow
    background: #FFCA0D

class button-blue
    background: #00ACE3

class view
    position: absolute
    left: 0 !important
    top: 0 !important
    width: 100vw !important
    height: 100vh !important
    
    border-radius: 0
    padding: 64px !important
    
    z-index: 9999


div stage
    position: absolute
    left: 0
    right: 0
    top: 0
    bottom: 0
    
    overflow: hidden
    
    div app
        padding: 64px
        box-sizing: border-box
        padding-top: calc(50vh - 44px)
        div buttonTemplate is button hidden
            "{{title}}"


script
    src "watch.js"

script
    src "f16.js"



coffeescript
    @clearViewPositions = (e) ->
        e.stopPropagation()
        this.style.position = ''
        this.style.width = ''
        this.style.height = ''
        this.style.left = ''
        this.style.top = ''
        this.style.margin = ''
        this.style.zIndex = ''
        this.parentNode.removeChild this.tempObj
        
        this.removeEventListener 'transitionend', clearViewPositions
    
    @back = (el) ->
        el.classList.toggle 'view', false
        
        el.onclick = (e) ->
            e.stopPropagation()
            toFixed el
        
        el.addEventListener 'transitionend', clearViewPositions
    
    
    @toFixed = (el) ->
        bounds = el.getBoundingClientRect()
        cs = getComputedStyle el
        
        # create temp object
        
        tempObj = document.createElement 'div'
        
        tempObj.style.width = bounds.width + 'px'
        tempObj.style.height = bounds.height + 'px'
        tempObj.style.marginTop = cs.marginTop
        tempObj.style.marginBottom = cs.marginBottom
        tempObj.style.marginLeft = cs.marginLeft
        tempObj.style.marginRight = cs.marginRight
        tempObj.style.display = cs.display
        tempObj.style.position = cs.position
        tempObj.style.verticalAlign = cs.verticalAlign
        
        el.tempObj = tempObj
        
        # tweak the element
        
        el.style.position = 'absolute'
        el.style.width = bounds.width + 'px'
        el.style.height = bounds.height + 'px'
        el.style.boxSizing = 'border-box'
        el.style.zIndex = 99999
        
        el.style.left = bounds.left + 'px'
        el.style.top = bounds.top + 'px'
        
        el.style.margin = 0
        
        el.parentNode.insertBefore tempObj, el
        
        ttt = () ->
            el.classList.toggle 'view', true
            el.onclick = (e) ->
                e.stopPropagation()
                back(el)
        
        setTimeout ttt, 20
    
    data = [
        { title : "Red View", color : "red" }
        { title : "Blue View", color : "blue" }
        { title : "Yellow View", color : "yellow" }
        { title : "Red View", color : "red" }
        { title : "Blue View", color : "blue" }]
    
    for i in [0...data.length]
        nEl = f16.createFromTemplate buttonTemplate, data[i], () ->
            this.node.classList.toggle 'button-' + this.data.color, true
        
        app.appendChild nEl.node
        
        nEl.node.onclick = (e) ->
            e.stopPropagation()
            toFixed this